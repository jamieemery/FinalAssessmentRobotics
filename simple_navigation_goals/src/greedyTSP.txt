def greedyTSPAlgorithm(start, listOfNodes):
    newPathOrdered = []
    smallestNode, listOfNodes = takeSmallestDistanceNode(start, listOfNodes)
    newPathOrdered.append(smallestNode)
    while len(listOfNodes) > 0:
        smallestNode, listOfNodes = takeSmallestDistanceNode(smallestNode, listOfNodes)
        newPathOrdered.append(smallestNode)

    return newPathOrdered

def takeSmallestDistanceNode(givenNode, nonTravelled):
    prevEucDis = 0
    for node in nonTravelled:
        nodeEucl = node.calculateEucDist(givenNode)
        if prevEucDis == 0 or prevEucDis > nodeEucl:
            smallestNode = node
        prevEucDis = nodeEucl
    nonTravelled.remove(smallestNode)
    return smallestNode, nonTravelled